const tooltips = require('./tooltips')
const table = {
  renderTable: function(options) {
    $('#' + options.tableId).datagrid({
      dataSource: {
        cols: options.columns,
        data: options.datas,
        cache: false
      },
      configs: options.configs,
      states: options.states,
      valueOperator: options.valueOpe,
      responsive: false,
      checkable: options.checkable || false,
      checkByClickRow: false,
      showRowIndex: false,
      partialRendering: true,
      width: options.width || window.top.innerWidth - 60,
      height: options.height,
      rowHeight: options.rowHeight || [],
      rowDefaultHeight: options.rowDefaultHeight || 36,
      onRender: options.onRenderFunc,
      onScroll: () => {
        if ($('#' + options.tableId).data('zui.datagrid') != undefined) {
          $('#' + options.tableId).data('zui.datagrid').render()
        }
        tooltips.hideToolTips()
      }
    });
    var myDataGrid = $('#' + options.tableId).data('zui.datagrid');
    myDataGrid.setDataSource(options.datas, options.columns)
    myDataGrid.states.selections = {}
    myDataGrid.render()
  },

  renderListProWin: function(k1, k2, k3) {
    const v = (this.renderListToolTips(k1) + this.renderListToolTips(k2) + ((k3 === undefined || k3 === null || k3 === "") ? '' : this.renderListToolTips(k3)))
    return v
  },

  renderCellList: function(list) {
    let lds = []
    $.each(list, (index, item) => {
      lds.push(this.renderListToolTips(item))
    })
    return lds.join('')
  },

  renderCny: function(cny) {
    return '￥' + cny;
  },

  renderDollor: function(dollor) {
    return '$' + dollor
  },

  renderProductStatus: function(s) {
    return (s == 1 ? '新建' : s == 2 ? '审核中' : s == 3 ? '在售' : s == 4 ? '下架' : s == 5 ? '已拒绝' : '');
  },

  renderNumBox: function(v, i, k) {
    return `<input data-key="${k}" data-index="${i}" type="number" class="form-control numbox" value="${v}">`
  },

  renderListToolTips: function(v, forward) {
    const f = forward || 'top'
    return `<p class="text-ellipsis" data-container="body" data-toggle="tooltip" data-placement="${f}" title="${v.replace(/<[^>]+>/g,"")}">${v}</p>`
  },

  setTbOperateDrop: function(drop, cell) {
    let opeDoms = []
    $.each(drop, (index, item) => {
      opeDoms.push('<li><a href="javascript:;" data-event="' + item.Value + '" data-index="' + (cell.rowIndex - 1) + '">' + item.Key + '</a></li>')
    })
    return `<div class="input-group-btn table-operate"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown">操作 <span class="caret"></span></button><ul class="dropdown-menu pull-right" role="menu">${opeDoms.join('')}</ul></div>`
  },

  checkOperateDrop: function() {
    if ($(this).next().css('display') === 'none') {
      setTimeout(() => {
        const h = $(this).next()[0].offsetHeight
        const ot = $(this).next().offset().top
        if (h + ot >= $(window).height() - 82) {
          $(this).next().css('top', '-' + (h + 5) + 'px')
        }
      }, 1)
    }
  },

  getSelectedItems: function(tableId) {
    let s = $('#' + tableId).data('zui.datagrid').getCheckItems()
    if (s[s.length - 1] === null) {
      s.pop()
    }
    if (s[0] === null) {
      s.shift()
    }
    return s
  },

  cancelSelected: function(tableId) {
    let myDataGrid = $('#' + tableId).data('zui.datagrid');
    if (myDataGrid != undefined) {
      myDataGrid.states.selections = {}
      myDataGrid.render()
    }
  }
}

module.exports = table